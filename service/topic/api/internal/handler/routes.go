// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	topic "github.com/lixvyang/betxin-micro/service/topic/api/internal/handler/topic"
	"github.com/lixvyang/betxin-micro/service/topic/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/topic/:cid",
				Handler: topic.ListTopicByCidHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/topic/:tid",
				Handler: topic.GetTopicByTidHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/topic/search",
				Handler: topic.SearchTopicHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPatch,
				Path:    "/topic/:tid",
				Handler: topic.UpdateTopicPriceHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Admin},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/topic",
					Handler: topic.CreateTopicHandler(serverCtx),
				},
				{
					Method:  http.MethodDelete,
					Path:    "/topic",
					Handler: topic.DeleteTopicHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/topic",
					Handler: topic.ListTopicHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/topic",
					Handler: topic.UpdateTopicHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/topic/:tid/stop",
					Handler: topic.StopTopicHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/v1"),
	)
}
