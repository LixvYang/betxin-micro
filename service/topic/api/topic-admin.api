info(
	title:
	desc:
	author:
	email: @betxin.one
	version: 1.0
)

import "errmsg.api"

type Category {
	Id           uint64 `json:"id"`
	CategoryName string `json:"category_name"`
}

type Topic {
	Id           int64     `json:"id"`
	Tid          string    `json:"tid"`
	Cid          uint64    `json:"cid"`
	Category     *Category `json:"category"`
	Title        string    `json:"title"`
	Intro        string    `json:"intro"`
	Content      string    `json:"content"`
	YesRatio     float64   `json:"yes_ratio"`
	NoRatio      float64   `json:"no_ratio"`
	YesPrice     float64   `json:"yes_ratio_price"`
	NoPrice      float64   `json:"no_ratio_price"`
	TotalPrice   float64   `json:"total_price"`
	CollectCount uint64    `json:"collect_count"`
	ReadCount    uint64    `json:"read_count"`
	ImgUrl       string    `json:"img_url"`
	IsStop       int64     `json:"is_stop"`
	EndTime      int64     `json:"end_time"`

	CreatedAt int64 `json:"created_at"`
	UpdatedAt int64 `json:"updated_at"`
	DeletedAt int64 `json:"deleted_at"`
}

type CreateTopicReq {
	Cid     uint64 `json:"cid"`
	Tid     string `json:"tid"`
	Title   string `json:"title"`
	Intro   string `json:"intro"`
	Content string `json:"content"`
	ImgUrl  string `json:"img_url"`
	EndTime int64  `json:"end_time"`
}

type CreateTopicResp {
	Errmsg
	Data Topic `json:"data"`
}

type DeleteTopicReq {
	Tid string `json:"tid"`
}

type DeleteTopicResp {
	Errmsg
	Data *string `json:"data"`
}

type ListTopicResp {
	Errmsg
	Data []Topic `json:"data"`
}

// 定义管理员有的权限
// 定义已经有jwt的topic api
@server(
	group: topic
	prefix: /api/v1
	jwt: Auth
)
service topic-admin-api {
	@doc(
		summary: 根据cid获取topic列表
	)
	@handler CreateTopicHandler
	post /topic (CreateTopicReq) returns (CreateTopicResp)
	
	@doc(
		summary: 删除话题
	)
	@handler DeleteTopicHandler
	delete /topic (DeleteTopicReq) returns(DeleteTopicResp)
	
	@doc(
		summary: 列出所有的话题
	)
	@handler ListTopicHandler
	get /topic returns (ListTopicResp)
}