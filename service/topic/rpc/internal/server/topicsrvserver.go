// Code generated by goctl. DO NOT EDIT.
// Source: topicsrv.proto

package server

import (
	"context"

	"github.com/lixvyang/betxin-micro/service/topic/rpc/internal/logic"
	"github.com/lixvyang/betxin-micro/service/topic/rpc/internal/svc"
	"github.com/lixvyang/betxin-micro/service/topic/rpc/pb"
)

type TopicsrvServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedTopicsrvServer
}

func NewTopicsrvServer(svcCtx *svc.ServiceContext) *TopicsrvServer {
	return &TopicsrvServer{
		svcCtx: svcCtx,
	}
}

// -----------------------topic-----------------------
func (s *TopicsrvServer) AddTopic(ctx context.Context, in *pb.AddTopicReq) (*pb.AddTopicResp, error) {
	l := logic.NewAddTopicLogic(ctx, s.svcCtx)
	return l.AddTopic(in)
}

func (s *TopicsrvServer) UpdateTopic(ctx context.Context, in *pb.UpdateTopicReq) (*pb.UpdateTopicResp, error) {
	l := logic.NewUpdateTopicLogic(ctx, s.svcCtx)
	return l.UpdateTopic(in)
}

func (s *TopicsrvServer) DelTopic(ctx context.Context, in *pb.DelTopicReq) (*pb.DelTopicResp, error) {
	l := logic.NewDelTopicLogic(ctx, s.svcCtx)
	return l.DelTopic(in)
}

func (s *TopicsrvServer) GetTopicById(ctx context.Context, in *pb.GetTopicByIdReq) (*pb.GetTopicByIdResp, error) {
	l := logic.NewGetTopicByIdLogic(ctx, s.svcCtx)
	return l.GetTopicById(in)
}

func (s *TopicsrvServer) SearchTopic(ctx context.Context, in *pb.SearchTopicReq) (*pb.SearchTopicResp, error) {
	l := logic.NewSearchTopicLogic(ctx, s.svcCtx)
	return l.SearchTopic(in)
}

func (s *TopicsrvServer) ListTopic(ctx context.Context, in *pb.ListTopicReq) (*pb.ListTopicResp, error) {
	l := logic.NewListTopicLogic(ctx, s.svcCtx)
	return l.ListTopic(in)
}
