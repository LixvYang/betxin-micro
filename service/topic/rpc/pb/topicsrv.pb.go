// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: topicsrv.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------topic--------------------------------
type Topic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                               //id
	Tid           string  `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`                                              //tid
	Cid           int64   `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`                                             //cid
	Title         string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                          //title
	Intro         string  `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`                                          //intro
	Content       string  `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                                      //content
	YesRatio      float64 `protobuf:"fixed64,7,opt,name=yes_ratio,json=yesRatio,proto3" json:"yes_ratio,omitempty"`                  //yes_ratio
	NoRatio       float64 `protobuf:"fixed64,8,opt,name=no_ratio,json=noRatio,proto3" json:"no_ratio,omitempty"`                     //no_ratio
	YesPrice      float64 `protobuf:"fixed64,9,opt,name=yes_price,json=yesPrice,proto3" json:"yes_price,omitempty"`                  //yes_price
	NoPrice       float64 `protobuf:"fixed64,10,opt,name=no_price,json=noPrice,proto3" json:"no_price,omitempty"`                    //no_price
	TotalPrice    float64 `protobuf:"fixed64,11,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`           //total_price
	CollectCount  int64   `protobuf:"varint,12,opt,name=collect_count,json=collectCount,proto3" json:"collect_count,omitempty"`      //collect_count
	ReadCount     int64   `protobuf:"varint,13,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`               //read_count
	ImgUrl        string  `protobuf:"bytes,14,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`                         //img_url
	IsStop        int64   `protobuf:"varint,15,opt,name=is_stop,json=isStop,proto3" json:"is_stop,omitempty"`                        //is_stop
	RefundEndTime int64   `protobuf:"varint,16,opt,name=refund_end_time,json=refundEndTime,proto3" json:"refund_end_time,omitempty"` //refund_end_time
	CreatedAt     int64   `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               //created_at
	UpdatedAt     int64   `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`               //updated_at
	DeletedAt     int64   `protobuf:"varint,19,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`               //deleted_at
}

func (x *Topic) Reset() {
	*x = Topic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Topic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Topic) ProtoMessage() {}

func (x *Topic) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Topic.ProtoReflect.Descriptor instead.
func (*Topic) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{0}
}

func (x *Topic) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Topic) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *Topic) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Topic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Topic) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *Topic) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Topic) GetYesRatio() float64 {
	if x != nil {
		return x.YesRatio
	}
	return 0
}

func (x *Topic) GetNoRatio() float64 {
	if x != nil {
		return x.NoRatio
	}
	return 0
}

func (x *Topic) GetYesPrice() float64 {
	if x != nil {
		return x.YesPrice
	}
	return 0
}

func (x *Topic) GetNoPrice() float64 {
	if x != nil {
		return x.NoPrice
	}
	return 0
}

func (x *Topic) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Topic) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *Topic) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *Topic) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *Topic) GetIsStop() int64 {
	if x != nil {
		return x.IsStop
	}
	return 0
}

func (x *Topic) GetRefundEndTime() int64 {
	if x != nil {
		return x.RefundEndTime
	}
	return 0
}

func (x *Topic) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Topic) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Topic) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddTopicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tid           string  `protobuf:"bytes,1,opt,name=tid,proto3" json:"tid,omitempty"`                                              //tid
	Cid           int64   `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`                                             //cid
	Title         string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                          //title
	Intro         string  `protobuf:"bytes,4,opt,name=intro,proto3" json:"intro,omitempty"`                                          //intro
	Content       string  `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`                                      //content
	YesRatio      float64 `protobuf:"fixed64,6,opt,name=yes_ratio,json=yesRatio,proto3" json:"yes_ratio,omitempty"`                  //yes_ratio
	NoRatio       float64 `protobuf:"fixed64,7,opt,name=no_ratio,json=noRatio,proto3" json:"no_ratio,omitempty"`                     //no_ratio
	YesPrice      float64 `protobuf:"fixed64,8,opt,name=yes_price,json=yesPrice,proto3" json:"yes_price,omitempty"`                  //yes_price
	NoPrice       float64 `protobuf:"fixed64,9,opt,name=no_price,json=noPrice,proto3" json:"no_price,omitempty"`                     //no_price
	TotalPrice    float64 `protobuf:"fixed64,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`           //total_price
	CollectCount  int64   `protobuf:"varint,11,opt,name=collect_count,json=collectCount,proto3" json:"collect_count,omitempty"`      //collect_count
	ReadCount     int64   `protobuf:"varint,12,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`               //read_count
	ImgUrl        string  `protobuf:"bytes,13,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`                         //img_url
	IsStop        int64   `protobuf:"varint,14,opt,name=is_stop,json=isStop,proto3" json:"is_stop,omitempty"`                        //is_stop
	RefundEndTime int64   `protobuf:"varint,15,opt,name=refund_end_time,json=refundEndTime,proto3" json:"refund_end_time,omitempty"` //refund_end_time
	CreatedAt     int64   `protobuf:"varint,16,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               //created_at
	UpdatedAt     int64   `protobuf:"varint,17,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`               //updated_at
	DeletedAt     int64   `protobuf:"varint,18,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`               //deleted_at
}

func (x *AddTopicReq) Reset() {
	*x = AddTopicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTopicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTopicReq) ProtoMessage() {}

func (x *AddTopicReq) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTopicReq.ProtoReflect.Descriptor instead.
func (*AddTopicReq) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{1}
}

func (x *AddTopicReq) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *AddTopicReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *AddTopicReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AddTopicReq) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *AddTopicReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *AddTopicReq) GetYesRatio() float64 {
	if x != nil {
		return x.YesRatio
	}
	return 0
}

func (x *AddTopicReq) GetNoRatio() float64 {
	if x != nil {
		return x.NoRatio
	}
	return 0
}

func (x *AddTopicReq) GetYesPrice() float64 {
	if x != nil {
		return x.YesPrice
	}
	return 0
}

func (x *AddTopicReq) GetNoPrice() float64 {
	if x != nil {
		return x.NoPrice
	}
	return 0
}

func (x *AddTopicReq) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *AddTopicReq) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *AddTopicReq) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *AddTopicReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *AddTopicReq) GetIsStop() int64 {
	if x != nil {
		return x.IsStop
	}
	return 0
}

func (x *AddTopicReq) GetRefundEndTime() int64 {
	if x != nil {
		return x.RefundEndTime
	}
	return 0
}

func (x *AddTopicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddTopicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *AddTopicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type AddTopicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddTopicResp) Reset() {
	*x = AddTopicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTopicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTopicResp) ProtoMessage() {}

func (x *AddTopicResp) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTopicResp.ProtoReflect.Descriptor instead.
func (*AddTopicResp) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{2}
}

type UpdateTopicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                               //id
	Tid           string  `protobuf:"bytes,2,opt,name=tid,proto3" json:"tid,omitempty"`                                              //tid
	Cid           int64   `protobuf:"varint,3,opt,name=cid,proto3" json:"cid,omitempty"`                                             //cid
	Title         string  `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                          //title
	Intro         string  `protobuf:"bytes,5,opt,name=intro,proto3" json:"intro,omitempty"`                                          //intro
	Content       string  `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                                      //content
	YesRatio      float64 `protobuf:"fixed64,7,opt,name=yes_ratio,json=yesRatio,proto3" json:"yes_ratio,omitempty"`                  //yes_ratio
	NoRatio       float64 `protobuf:"fixed64,8,opt,name=no_ratio,json=noRatio,proto3" json:"no_ratio,omitempty"`                     //no_ratio
	YesPrice      float64 `protobuf:"fixed64,9,opt,name=yes_price,json=yesPrice,proto3" json:"yes_price,omitempty"`                  //yes_price
	NoPrice       float64 `protobuf:"fixed64,10,opt,name=no_price,json=noPrice,proto3" json:"no_price,omitempty"`                    //no_price
	TotalPrice    float64 `protobuf:"fixed64,11,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`           //total_price
	CollectCount  int64   `protobuf:"varint,12,opt,name=collect_count,json=collectCount,proto3" json:"collect_count,omitempty"`      //collect_count
	ReadCount     int64   `protobuf:"varint,13,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`               //read_count
	ImgUrl        string  `protobuf:"bytes,14,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`                         //img_url
	IsStop        int64   `protobuf:"varint,15,opt,name=is_stop,json=isStop,proto3" json:"is_stop,omitempty"`                        //is_stop
	RefundEndTime int64   `protobuf:"varint,16,opt,name=refund_end_time,json=refundEndTime,proto3" json:"refund_end_time,omitempty"` //refund_end_time
	CreatedAt     int64   `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               //created_at
	UpdatedAt     int64   `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`               //updated_at
	DeletedAt     int64   `protobuf:"varint,19,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`               //deleted_at
}

func (x *UpdateTopicReq) Reset() {
	*x = UpdateTopicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopicReq) ProtoMessage() {}

func (x *UpdateTopicReq) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopicReq.ProtoReflect.Descriptor instead.
func (*UpdateTopicReq) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTopicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTopicReq) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *UpdateTopicReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *UpdateTopicReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTopicReq) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *UpdateTopicReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateTopicReq) GetYesRatio() float64 {
	if x != nil {
		return x.YesRatio
	}
	return 0
}

func (x *UpdateTopicReq) GetNoRatio() float64 {
	if x != nil {
		return x.NoRatio
	}
	return 0
}

func (x *UpdateTopicReq) GetYesPrice() float64 {
	if x != nil {
		return x.YesPrice
	}
	return 0
}

func (x *UpdateTopicReq) GetNoPrice() float64 {
	if x != nil {
		return x.NoPrice
	}
	return 0
}

func (x *UpdateTopicReq) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *UpdateTopicReq) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *UpdateTopicReq) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *UpdateTopicReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *UpdateTopicReq) GetIsStop() int64 {
	if x != nil {
		return x.IsStop
	}
	return 0
}

func (x *UpdateTopicReq) GetRefundEndTime() int64 {
	if x != nil {
		return x.RefundEndTime
	}
	return 0
}

func (x *UpdateTopicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateTopicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *UpdateTopicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type UpdateTopicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateTopicResp) Reset() {
	*x = UpdateTopicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTopicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTopicResp) ProtoMessage() {}

func (x *UpdateTopicResp) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTopicResp.ProtoReflect.Descriptor instead.
func (*UpdateTopicResp) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{4}
}

type DelTopicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelTopicReq) Reset() {
	*x = DelTopicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTopicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTopicReq) ProtoMessage() {}

func (x *DelTopicReq) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTopicReq.ProtoReflect.Descriptor instead.
func (*DelTopicReq) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{5}
}

func (x *DelTopicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelTopicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelTopicResp) Reset() {
	*x = DelTopicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelTopicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelTopicResp) ProtoMessage() {}

func (x *DelTopicResp) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelTopicResp.ProtoReflect.Descriptor instead.
func (*DelTopicResp) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{6}
}

type GetTopicByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetTopicByIdReq) Reset() {
	*x = GetTopicByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicByIdReq) ProtoMessage() {}

func (x *GetTopicByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicByIdReq.ProtoReflect.Descriptor instead.
func (*GetTopicByIdReq) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{7}
}

func (x *GetTopicByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetTopicByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic *Topic `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"` //topic
}

func (x *GetTopicByIdResp) Reset() {
	*x = GetTopicByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTopicByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTopicByIdResp) ProtoMessage() {}

func (x *GetTopicByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTopicByIdResp.ProtoReflect.Descriptor instead.
func (*GetTopicByIdResp) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{8}
}

func (x *GetTopicByIdResp) GetTopic() *Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

type SearchTopicReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          int64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                           //page
	Limit         int64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                                         //limit
	Id            int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                               //id
	Tid           string  `protobuf:"bytes,4,opt,name=tid,proto3" json:"tid,omitempty"`                                              //tid
	Cid           int64   `protobuf:"varint,5,opt,name=cid,proto3" json:"cid,omitempty"`                                             //cid
	Title         string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                                          //title
	Intro         string  `protobuf:"bytes,7,opt,name=intro,proto3" json:"intro,omitempty"`                                          //intro
	Content       string  `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`                                      //content
	YesRatio      float64 `protobuf:"fixed64,9,opt,name=yes_ratio,json=yesRatio,proto3" json:"yes_ratio,omitempty"`                  //yes_ratio
	NoRatio       float64 `protobuf:"fixed64,10,opt,name=no_ratio,json=noRatio,proto3" json:"no_ratio,omitempty"`                    //no_ratio
	YesPrice      float64 `protobuf:"fixed64,11,opt,name=yes_price,json=yesPrice,proto3" json:"yes_price,omitempty"`                 //yes_price
	NoPrice       float64 `protobuf:"fixed64,12,opt,name=no_price,json=noPrice,proto3" json:"no_price,omitempty"`                    //no_price
	TotalPrice    float64 `protobuf:"fixed64,13,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`           //total_price
	CollectCount  int64   `protobuf:"varint,14,opt,name=collect_count,json=collectCount,proto3" json:"collect_count,omitempty"`      //collect_count
	ReadCount     int64   `protobuf:"varint,15,opt,name=read_count,json=readCount,proto3" json:"read_count,omitempty"`               //read_count
	ImgUrl        string  `protobuf:"bytes,16,opt,name=img_url,json=imgUrl,proto3" json:"img_url,omitempty"`                         //img_url
	IsStop        int64   `protobuf:"varint,17,opt,name=is_stop,json=isStop,proto3" json:"is_stop,omitempty"`                        //is_stop
	RefundEndTime int64   `protobuf:"varint,18,opt,name=refund_end_time,json=refundEndTime,proto3" json:"refund_end_time,omitempty"` //refund_end_time
	CreatedAt     int64   `protobuf:"varint,19,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`               //created_at
	UpdatedAt     int64   `protobuf:"varint,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`               //updated_at
	DeletedAt     int64   `protobuf:"varint,21,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`               //deleted_at
}

func (x *SearchTopicReq) Reset() {
	*x = SearchTopicReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicReq) ProtoMessage() {}

func (x *SearchTopicReq) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicReq.ProtoReflect.Descriptor instead.
func (*SearchTopicReq) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{9}
}

func (x *SearchTopicReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchTopicReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchTopicReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchTopicReq) GetTid() string {
	if x != nil {
		return x.Tid
	}
	return ""
}

func (x *SearchTopicReq) GetCid() int64 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *SearchTopicReq) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchTopicReq) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *SearchTopicReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SearchTopicReq) GetYesRatio() float64 {
	if x != nil {
		return x.YesRatio
	}
	return 0
}

func (x *SearchTopicReq) GetNoRatio() float64 {
	if x != nil {
		return x.NoRatio
	}
	return 0
}

func (x *SearchTopicReq) GetYesPrice() float64 {
	if x != nil {
		return x.YesPrice
	}
	return 0
}

func (x *SearchTopicReq) GetNoPrice() float64 {
	if x != nil {
		return x.NoPrice
	}
	return 0
}

func (x *SearchTopicReq) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *SearchTopicReq) GetCollectCount() int64 {
	if x != nil {
		return x.CollectCount
	}
	return 0
}

func (x *SearchTopicReq) GetReadCount() int64 {
	if x != nil {
		return x.ReadCount
	}
	return 0
}

func (x *SearchTopicReq) GetImgUrl() string {
	if x != nil {
		return x.ImgUrl
	}
	return ""
}

func (x *SearchTopicReq) GetIsStop() int64 {
	if x != nil {
		return x.IsStop
	}
	return 0
}

func (x *SearchTopicReq) GetRefundEndTime() int64 {
	if x != nil {
		return x.RefundEndTime
	}
	return 0
}

func (x *SearchTopicReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchTopicReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SearchTopicReq) GetDeletedAt() int64 {
	if x != nil {
		return x.DeletedAt
	}
	return 0
}

type SearchTopicResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic []*Topic `protobuf:"bytes,1,rep,name=topic,proto3" json:"topic,omitempty"` //topic
}

func (x *SearchTopicResp) Reset() {
	*x = SearchTopicResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topicsrv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTopicResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTopicResp) ProtoMessage() {}

func (x *SearchTopicResp) ProtoReflect() protoreflect.Message {
	mi := &file_topicsrv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTopicResp.ProtoReflect.Descriptor instead.
func (*SearchTopicResp) Descriptor() ([]byte, []int) {
	return file_topicsrv_proto_rawDescGZIP(), []int{10}
}

func (x *SearchTopicResp) GetTopic() []*Topic {
	if x != nil {
		return x.Topic
	}
	return nil
}

var File_topicsrv_proto protoreflect.FileDescriptor

var file_topicsrv_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x22, 0x8d, 0x04, 0x0a, 0x05, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x79, 0x65, 0x73,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x6f, 0x52, 0x61, 0x74, 0x69, 0x6f,
	0x12, 0x1b, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x08, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x07, 0x6e, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f,
	0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x26, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0x83, 0x04, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x08, 0x79, 0x65, 0x73, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e,
	0x6f, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6e,
	0x6f, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x79, 0x65, 0x73, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69,
	0x73, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x96, 0x04, 0x0a, 0x0e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x79, 0x65, 0x73, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x6f, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12,
	0x1b, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x6e, 0x6f, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07,
	0x6e, 0x6f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x26,
	0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x1d, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x22, 0x21, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05,
	0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x22, 0xc0, 0x04,
	0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x79, 0x65, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x79, 0x65, 0x73, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x6f, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x79, 0x65, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x79, 0x65, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x6f, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x6e, 0x6f, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65,
	0x61, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x65, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x6d, 0x67,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x67, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x70, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x70, 0x12, 0x26, 0x0a, 0x0f, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x32, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x32, 0x93, 0x02, 0x0a, 0x08, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x73, 0x72,
	0x76, 0x12, 0x2d, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x0f, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x10,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x36, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12,
	0x12, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x08, 0x44, 0x65, 0x6c, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x70, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x36, 0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x6f, 0x70,
	0x69, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f,
	0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_topicsrv_proto_rawDescOnce sync.Once
	file_topicsrv_proto_rawDescData = file_topicsrv_proto_rawDesc
)

func file_topicsrv_proto_rawDescGZIP() []byte {
	file_topicsrv_proto_rawDescOnce.Do(func() {
		file_topicsrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_topicsrv_proto_rawDescData)
	})
	return file_topicsrv_proto_rawDescData
}

var file_topicsrv_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_topicsrv_proto_goTypes = []interface{}{
	(*Topic)(nil),            // 0: pb.Topic
	(*AddTopicReq)(nil),      // 1: pb.AddTopicReq
	(*AddTopicResp)(nil),     // 2: pb.AddTopicResp
	(*UpdateTopicReq)(nil),   // 3: pb.UpdateTopicReq
	(*UpdateTopicResp)(nil),  // 4: pb.UpdateTopicResp
	(*DelTopicReq)(nil),      // 5: pb.DelTopicReq
	(*DelTopicResp)(nil),     // 6: pb.DelTopicResp
	(*GetTopicByIdReq)(nil),  // 7: pb.GetTopicByIdReq
	(*GetTopicByIdResp)(nil), // 8: pb.GetTopicByIdResp
	(*SearchTopicReq)(nil),   // 9: pb.SearchTopicReq
	(*SearchTopicResp)(nil),  // 10: pb.SearchTopicResp
}
var file_topicsrv_proto_depIdxs = []int32{
	0,  // 0: pb.GetTopicByIdResp.topic:type_name -> pb.Topic
	0,  // 1: pb.SearchTopicResp.topic:type_name -> pb.Topic
	1,  // 2: pb.topicsrv.AddTopic:input_type -> pb.AddTopicReq
	3,  // 3: pb.topicsrv.UpdateTopic:input_type -> pb.UpdateTopicReq
	5,  // 4: pb.topicsrv.DelTopic:input_type -> pb.DelTopicReq
	7,  // 5: pb.topicsrv.GetTopicById:input_type -> pb.GetTopicByIdReq
	9,  // 6: pb.topicsrv.SearchTopic:input_type -> pb.SearchTopicReq
	2,  // 7: pb.topicsrv.AddTopic:output_type -> pb.AddTopicResp
	4,  // 8: pb.topicsrv.UpdateTopic:output_type -> pb.UpdateTopicResp
	6,  // 9: pb.topicsrv.DelTopic:output_type -> pb.DelTopicResp
	8,  // 10: pb.topicsrv.GetTopicById:output_type -> pb.GetTopicByIdResp
	10, // 11: pb.topicsrv.SearchTopic:output_type -> pb.SearchTopicResp
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_topicsrv_proto_init() }
func file_topicsrv_proto_init() {
	if File_topicsrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_topicsrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Topic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTopicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTopicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTopicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTopicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelTopicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTopicByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topicsrv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTopicResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_topicsrv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_topicsrv_proto_goTypes,
		DependencyIndexes: file_topicsrv_proto_depIdxs,
		MessageInfos:      file_topicsrv_proto_msgTypes,
	}.Build()
	File_topicsrv_proto = out.File
	file_topicsrv_proto_rawDesc = nil
	file_topicsrv_proto_goTypes = nil
	file_topicsrv_proto_depIdxs = nil
}
