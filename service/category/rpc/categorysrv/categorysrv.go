// Code generated by goctl. DO NOT EDIT.
// Source: categorysrv.proto

package categorysrv

import (
	"context"

	"github.com/lixvyang/betxin-micro/service/category/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddCategoryReq      = pb.AddCategoryReq
	AddCategoryResp     = pb.AddCategoryResp
	Category            = pb.Category
	DelCategoryReq      = pb.DelCategoryReq
	DelCategoryResp     = pb.DelCategoryResp
	GetCategoryByIdReq  = pb.GetCategoryByIdReq
	GetCategoryByIdResp = pb.GetCategoryByIdResp
	ListCategoryReq     = pb.ListCategoryReq
	ListCategoryResp    = pb.ListCategoryResp
	SearchCategoryReq   = pb.SearchCategoryReq
	SearchCategoryResp  = pb.SearchCategoryResp
	UpdateCategoryReq   = pb.UpdateCategoryReq
	UpdateCategoryResp  = pb.UpdateCategoryResp

	Categorysrv interface {
		// -----------------------category-----------------------
		AddCategory(ctx context.Context, in *AddCategoryReq, opts ...grpc.CallOption) (*AddCategoryResp, error)
		UpdateCategory(ctx context.Context, in *UpdateCategoryReq, opts ...grpc.CallOption) (*UpdateCategoryResp, error)
		DelCategory(ctx context.Context, in *DelCategoryReq, opts ...grpc.CallOption) (*DelCategoryResp, error)
		GetCategoryById(ctx context.Context, in *GetCategoryByIdReq, opts ...grpc.CallOption) (*GetCategoryByIdResp, error)
		SearchCategory(ctx context.Context, in *SearchCategoryReq, opts ...grpc.CallOption) (*SearchCategoryResp, error)
		ListCategory(ctx context.Context, in *ListCategoryReq, opts ...grpc.CallOption) (*ListCategoryResp, error)
	}

	defaultCategorysrv struct {
		cli zrpc.Client
	}
)

func NewCategorysrv(cli zrpc.Client) Categorysrv {
	return &defaultCategorysrv{
		cli: cli,
	}
}

// -----------------------category-----------------------
func (m *defaultCategorysrv) AddCategory(ctx context.Context, in *AddCategoryReq, opts ...grpc.CallOption) (*AddCategoryResp, error) {
	client := pb.NewCategorysrvClient(m.cli.Conn())
	return client.AddCategory(ctx, in, opts...)
}

func (m *defaultCategorysrv) UpdateCategory(ctx context.Context, in *UpdateCategoryReq, opts ...grpc.CallOption) (*UpdateCategoryResp, error) {
	client := pb.NewCategorysrvClient(m.cli.Conn())
	return client.UpdateCategory(ctx, in, opts...)
}

func (m *defaultCategorysrv) DelCategory(ctx context.Context, in *DelCategoryReq, opts ...grpc.CallOption) (*DelCategoryResp, error) {
	client := pb.NewCategorysrvClient(m.cli.Conn())
	return client.DelCategory(ctx, in, opts...)
}

func (m *defaultCategorysrv) GetCategoryById(ctx context.Context, in *GetCategoryByIdReq, opts ...grpc.CallOption) (*GetCategoryByIdResp, error) {
	client := pb.NewCategorysrvClient(m.cli.Conn())
	return client.GetCategoryById(ctx, in, opts...)
}

func (m *defaultCategorysrv) SearchCategory(ctx context.Context, in *SearchCategoryReq, opts ...grpc.CallOption) (*SearchCategoryResp, error) {
	client := pb.NewCategorysrvClient(m.cli.Conn())
	return client.SearchCategory(ctx, in, opts...)
}

func (m *defaultCategorysrv) ListCategory(ctx context.Context, in *ListCategoryReq, opts ...grpc.CallOption) (*ListCategoryResp, error) {
	client := pb.NewCategorysrvClient(m.cli.Conn())
	return client.ListCategory(ctx, in, opts...)
}
