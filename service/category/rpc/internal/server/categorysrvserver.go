// Code generated by goctl. DO NOT EDIT.
// Source: categorysrv.proto

package server

import (
	"context"

	"github.com/lixvyang/betxin-micro/service/category/rpc/internal/logic"
	"github.com/lixvyang/betxin-micro/service/category/rpc/internal/svc"
	"github.com/lixvyang/betxin-micro/service/category/rpc/pb"
)

type CategorysrvServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedCategorysrvServer
}

func NewCategorysrvServer(svcCtx *svc.ServiceContext) *CategorysrvServer {
	return &CategorysrvServer{
		svcCtx: svcCtx,
	}
}

// -----------------------category-----------------------
func (s *CategorysrvServer) AddCategory(ctx context.Context, in *pb.AddCategoryReq) (*pb.AddCategoryResp, error) {
	l := logic.NewAddCategoryLogic(ctx, s.svcCtx)
	return l.AddCategory(in)
}

func (s *CategorysrvServer) UpdateCategory(ctx context.Context, in *pb.UpdateCategoryReq) (*pb.UpdateCategoryResp, error) {
	l := logic.NewUpdateCategoryLogic(ctx, s.svcCtx)
	return l.UpdateCategory(in)
}

func (s *CategorysrvServer) DelCategory(ctx context.Context, in *pb.DelCategoryReq) (*pb.DelCategoryResp, error) {
	l := logic.NewDelCategoryLogic(ctx, s.svcCtx)
	return l.DelCategory(in)
}

func (s *CategorysrvServer) GetCategoryById(ctx context.Context, in *pb.GetCategoryByIdReq) (*pb.GetCategoryByIdResp, error) {
	l := logic.NewGetCategoryByIdLogic(ctx, s.svcCtx)
	return l.GetCategoryById(in)
}

func (s *CategorysrvServer) SearchCategory(ctx context.Context, in *pb.SearchCategoryReq) (*pb.SearchCategoryResp, error) {
	l := logic.NewSearchCategoryLogic(ctx, s.svcCtx)
	return l.SearchCategory(in)
}
