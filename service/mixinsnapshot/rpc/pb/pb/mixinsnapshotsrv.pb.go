// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: mixinsnapshotsrv.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------------------mixinsnapshot--------------------------------
type Mixinsnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                 //id
	SnapshotId     string  `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`                //snapshot_id
	TraceId        string  `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                         //trace_id
	AssetId        string  `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                         //asset_id
	OpponentId     string  `protobuf:"bytes,5,opt,name=opponent_id,json=opponentId,proto3" json:"opponent_id,omitempty"`                //opponent_id
	Amount         float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`                                        //amount
	Memo           string  `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`                                              //memo
	Type           string  `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`                                              //type
	OpeningBalance float64 `protobuf:"fixed64,9,opt,name=opening_balance,json=openingBalance,proto3" json:"opening_balance,omitempty"`  //opening_balance
	ClosingBalance float64 `protobuf:"fixed64,10,opt,name=closing_balance,json=closingBalance,proto3" json:"closing_balance,omitempty"` //closing_balance
	CreatedAt      int64   `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                 //created_at
	UpdatedAt      int64   `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                 //updated_at
}

func (x *Mixinsnapshot) Reset() {
	*x = Mixinsnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Mixinsnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mixinsnapshot) ProtoMessage() {}

func (x *Mixinsnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mixinsnapshot.ProtoReflect.Descriptor instead.
func (*Mixinsnapshot) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{0}
}

func (x *Mixinsnapshot) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Mixinsnapshot) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *Mixinsnapshot) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *Mixinsnapshot) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *Mixinsnapshot) GetOpponentId() string {
	if x != nil {
		return x.OpponentId
	}
	return ""
}

func (x *Mixinsnapshot) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Mixinsnapshot) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Mixinsnapshot) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Mixinsnapshot) GetOpeningBalance() float64 {
	if x != nil {
		return x.OpeningBalance
	}
	return 0
}

func (x *Mixinsnapshot) GetClosingBalance() float64 {
	if x != nil {
		return x.ClosingBalance
	}
	return 0
}

func (x *Mixinsnapshot) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Mixinsnapshot) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddMixinsnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SnapshotId     string  `protobuf:"bytes,1,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`               //snapshot_id
	TraceId        string  `protobuf:"bytes,2,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                        //trace_id
	AssetId        string  `protobuf:"bytes,3,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                        //asset_id
	OpponentId     string  `protobuf:"bytes,4,opt,name=opponent_id,json=opponentId,proto3" json:"opponent_id,omitempty"`               //opponent_id
	Amount         float64 `protobuf:"fixed64,5,opt,name=amount,proto3" json:"amount,omitempty"`                                       //amount
	Memo           string  `protobuf:"bytes,6,opt,name=memo,proto3" json:"memo,omitempty"`                                             //memo
	Type           string  `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`                                             //type
	OpeningBalance float64 `protobuf:"fixed64,8,opt,name=opening_balance,json=openingBalance,proto3" json:"opening_balance,omitempty"` //opening_balance
	ClosingBalance float64 `protobuf:"fixed64,9,opt,name=closing_balance,json=closingBalance,proto3" json:"closing_balance,omitempty"` //closing_balance
	CreatedAt      int64   `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                //created_at
	UpdatedAt      int64   `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                //updated_at
}

func (x *AddMixinsnapshotReq) Reset() {
	*x = AddMixinsnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMixinsnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMixinsnapshotReq) ProtoMessage() {}

func (x *AddMixinsnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMixinsnapshotReq.ProtoReflect.Descriptor instead.
func (*AddMixinsnapshotReq) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{1}
}

func (x *AddMixinsnapshotReq) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *AddMixinsnapshotReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *AddMixinsnapshotReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *AddMixinsnapshotReq) GetOpponentId() string {
	if x != nil {
		return x.OpponentId
	}
	return ""
}

func (x *AddMixinsnapshotReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AddMixinsnapshotReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *AddMixinsnapshotReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AddMixinsnapshotReq) GetOpeningBalance() float64 {
	if x != nil {
		return x.OpeningBalance
	}
	return 0
}

func (x *AddMixinsnapshotReq) GetClosingBalance() float64 {
	if x != nil {
		return x.ClosingBalance
	}
	return 0
}

func (x *AddMixinsnapshotReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AddMixinsnapshotReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type AddMixinsnapshotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddMixinsnapshotResp) Reset() {
	*x = AddMixinsnapshotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddMixinsnapshotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddMixinsnapshotResp) ProtoMessage() {}

func (x *AddMixinsnapshotResp) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddMixinsnapshotResp.ProtoReflect.Descriptor instead.
func (*AddMixinsnapshotResp) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{2}
}

type UpdateMixinsnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                 //id
	SnapshotId     string  `protobuf:"bytes,2,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`                //snapshot_id
	TraceId        string  `protobuf:"bytes,3,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                         //trace_id
	AssetId        string  `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                         //asset_id
	OpponentId     string  `protobuf:"bytes,5,opt,name=opponent_id,json=opponentId,proto3" json:"opponent_id,omitempty"`                //opponent_id
	Amount         float64 `protobuf:"fixed64,6,opt,name=amount,proto3" json:"amount,omitempty"`                                        //amount
	Memo           string  `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`                                              //memo
	Type           string  `protobuf:"bytes,8,opt,name=type,proto3" json:"type,omitempty"`                                              //type
	OpeningBalance float64 `protobuf:"fixed64,9,opt,name=opening_balance,json=openingBalance,proto3" json:"opening_balance,omitempty"`  //opening_balance
	ClosingBalance float64 `protobuf:"fixed64,10,opt,name=closing_balance,json=closingBalance,proto3" json:"closing_balance,omitempty"` //closing_balance
	CreatedAt      int64   `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                 //created_at
	UpdatedAt      int64   `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                 //updated_at
}

func (x *UpdateMixinsnapshotReq) Reset() {
	*x = UpdateMixinsnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMixinsnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMixinsnapshotReq) ProtoMessage() {}

func (x *UpdateMixinsnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMixinsnapshotReq.ProtoReflect.Descriptor instead.
func (*UpdateMixinsnapshotReq) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateMixinsnapshotReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMixinsnapshotReq) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *UpdateMixinsnapshotReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *UpdateMixinsnapshotReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *UpdateMixinsnapshotReq) GetOpponentId() string {
	if x != nil {
		return x.OpponentId
	}
	return ""
}

func (x *UpdateMixinsnapshotReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *UpdateMixinsnapshotReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *UpdateMixinsnapshotReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UpdateMixinsnapshotReq) GetOpeningBalance() float64 {
	if x != nil {
		return x.OpeningBalance
	}
	return 0
}

func (x *UpdateMixinsnapshotReq) GetClosingBalance() float64 {
	if x != nil {
		return x.ClosingBalance
	}
	return 0
}

func (x *UpdateMixinsnapshotReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *UpdateMixinsnapshotReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type UpdateMixinsnapshotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMixinsnapshotResp) Reset() {
	*x = UpdateMixinsnapshotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMixinsnapshotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMixinsnapshotResp) ProtoMessage() {}

func (x *UpdateMixinsnapshotResp) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMixinsnapshotResp.ProtoReflect.Descriptor instead.
func (*UpdateMixinsnapshotResp) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{4}
}

type DelMixinsnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *DelMixinsnapshotReq) Reset() {
	*x = DelMixinsnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMixinsnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMixinsnapshotReq) ProtoMessage() {}

func (x *DelMixinsnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMixinsnapshotReq.ProtoReflect.Descriptor instead.
func (*DelMixinsnapshotReq) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{5}
}

func (x *DelMixinsnapshotReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DelMixinsnapshotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DelMixinsnapshotResp) Reset() {
	*x = DelMixinsnapshotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DelMixinsnapshotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelMixinsnapshotResp) ProtoMessage() {}

func (x *DelMixinsnapshotResp) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelMixinsnapshotResp.ProtoReflect.Descriptor instead.
func (*DelMixinsnapshotResp) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{6}
}

type GetMixinsnapshotByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //id
}

func (x *GetMixinsnapshotByIdReq) Reset() {
	*x = GetMixinsnapshotByIdReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMixinsnapshotByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMixinsnapshotByIdReq) ProtoMessage() {}

func (x *GetMixinsnapshotByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMixinsnapshotByIdReq.ProtoReflect.Descriptor instead.
func (*GetMixinsnapshotByIdReq) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{7}
}

func (x *GetMixinsnapshotByIdReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetMixinsnapshotByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mixinsnapshot *Mixinsnapshot `protobuf:"bytes,1,opt,name=mixinsnapshot,proto3" json:"mixinsnapshot,omitempty"` //mixinsnapshot
}

func (x *GetMixinsnapshotByIdResp) Reset() {
	*x = GetMixinsnapshotByIdResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMixinsnapshotByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMixinsnapshotByIdResp) ProtoMessage() {}

func (x *GetMixinsnapshotByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMixinsnapshotByIdResp.ProtoReflect.Descriptor instead.
func (*GetMixinsnapshotByIdResp) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{8}
}

func (x *GetMixinsnapshotByIdResp) GetMixinsnapshot() *Mixinsnapshot {
	if x != nil {
		return x.Mixinsnapshot
	}
	return nil
}

type SearchMixinsnapshotReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`                                             //page
	Limit          int64   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`                                           //limit
	Id             int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`                                                 //id
	SnapshotId     string  `protobuf:"bytes,4,opt,name=snapshot_id,json=snapshotId,proto3" json:"snapshot_id,omitempty"`                //snapshot_id
	TraceId        string  `protobuf:"bytes,5,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                         //trace_id
	AssetId        string  `protobuf:"bytes,6,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`                         //asset_id
	OpponentId     string  `protobuf:"bytes,7,opt,name=opponent_id,json=opponentId,proto3" json:"opponent_id,omitempty"`                //opponent_id
	Amount         float64 `protobuf:"fixed64,8,opt,name=amount,proto3" json:"amount,omitempty"`                                        //amount
	Memo           string  `protobuf:"bytes,9,opt,name=memo,proto3" json:"memo,omitempty"`                                              //memo
	Type           string  `protobuf:"bytes,10,opt,name=type,proto3" json:"type,omitempty"`                                             //type
	OpeningBalance float64 `protobuf:"fixed64,11,opt,name=opening_balance,json=openingBalance,proto3" json:"opening_balance,omitempty"` //opening_balance
	ClosingBalance float64 `protobuf:"fixed64,12,opt,name=closing_balance,json=closingBalance,proto3" json:"closing_balance,omitempty"` //closing_balance
	CreatedAt      int64   `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                 //created_at
	UpdatedAt      int64   `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                 //updated_at
}

func (x *SearchMixinsnapshotReq) Reset() {
	*x = SearchMixinsnapshotReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMixinsnapshotReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMixinsnapshotReq) ProtoMessage() {}

func (x *SearchMixinsnapshotReq) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMixinsnapshotReq.ProtoReflect.Descriptor instead.
func (*SearchMixinsnapshotReq) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{9}
}

func (x *SearchMixinsnapshotReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetSnapshotId() string {
	if x != nil {
		return x.SnapshotId
	}
	return ""
}

func (x *SearchMixinsnapshotReq) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *SearchMixinsnapshotReq) GetAssetId() string {
	if x != nil {
		return x.AssetId
	}
	return ""
}

func (x *SearchMixinsnapshotReq) GetOpponentId() string {
	if x != nil {
		return x.OpponentId
	}
	return ""
}

func (x *SearchMixinsnapshotReq) GetAmount() float64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *SearchMixinsnapshotReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchMixinsnapshotReq) GetOpeningBalance() float64 {
	if x != nil {
		return x.OpeningBalance
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetClosingBalance() float64 {
	if x != nil {
		return x.ClosingBalance
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SearchMixinsnapshotReq) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SearchMixinsnapshotResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mixinsnapshot []*Mixinsnapshot `protobuf:"bytes,1,rep,name=mixinsnapshot,proto3" json:"mixinsnapshot,omitempty"` //mixinsnapshot
}

func (x *SearchMixinsnapshotResp) Reset() {
	*x = SearchMixinsnapshotResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mixinsnapshotsrv_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMixinsnapshotResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMixinsnapshotResp) ProtoMessage() {}

func (x *SearchMixinsnapshotResp) ProtoReflect() protoreflect.Message {
	mi := &file_mixinsnapshotsrv_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMixinsnapshotResp.ProtoReflect.Descriptor instead.
func (*SearchMixinsnapshotResp) Descriptor() ([]byte, []int) {
	return file_mixinsnapshotsrv_proto_rawDescGZIP(), []int{10}
}

func (x *SearchMixinsnapshotResp) GetMixinsnapshot() []*Mixinsnapshot {
	if x != nil {
		return x.Mixinsnapshot
	}
	return nil
}

var File_mixinsnapshotsrv_proto protoreflect.FileDescriptor

var file_mixinsnapshotsrv_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73,
	0x72, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22, 0xe7, 0x02, 0x0a,
	0x0d, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdd, 0x02, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x4d, 0x69,
	0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73,
	0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65,
	0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e,
	0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x78,
	0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0xf0,
	0x02, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e,
	0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c,
	0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x19, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x78, 0x69, 0x6e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x25, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73,
	0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x29, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42,
	0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x53, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x78,
	0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0d, 0x6d, 0x69,
	0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x22, 0x9a, 0x03, 0x0a, 0x16,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x73, 0x73, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x70,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x6e,
	0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6c, 0x6f, 0x73, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x52, 0x0a, 0x17, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x37, 0x0a, 0x0d, 0x6d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x0d, 0x6d,
	0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x32, 0x93, 0x03, 0x0a,
	0x10, 0x6d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x73, 0x72,
	0x76, 0x12, 0x45, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61,
	0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x69,
	0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12,
	0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x78, 0x69, 0x6e,
	0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70,
	0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x45, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x4d,
	0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x17, 0x2e, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x6c, 0x4d, 0x69,
	0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x51, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73,
	0x68, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x1a, 0x1c, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x78,
	0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x4e, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x69, 0x78, 0x69,
	0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68,
	0x6f, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1b, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x4d, 0x69, 0x78, 0x69, 0x6e, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x42, 0x06, 0x5a, 0x04, 0x2e, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_mixinsnapshotsrv_proto_rawDescOnce sync.Once
	file_mixinsnapshotsrv_proto_rawDescData = file_mixinsnapshotsrv_proto_rawDesc
)

func file_mixinsnapshotsrv_proto_rawDescGZIP() []byte {
	file_mixinsnapshotsrv_proto_rawDescOnce.Do(func() {
		file_mixinsnapshotsrv_proto_rawDescData = protoimpl.X.CompressGZIP(file_mixinsnapshotsrv_proto_rawDescData)
	})
	return file_mixinsnapshotsrv_proto_rawDescData
}

var file_mixinsnapshotsrv_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_mixinsnapshotsrv_proto_goTypes = []interface{}{
	(*Mixinsnapshot)(nil),            // 0: pb.Mixinsnapshot
	(*AddMixinsnapshotReq)(nil),      // 1: pb.AddMixinsnapshotReq
	(*AddMixinsnapshotResp)(nil),     // 2: pb.AddMixinsnapshotResp
	(*UpdateMixinsnapshotReq)(nil),   // 3: pb.UpdateMixinsnapshotReq
	(*UpdateMixinsnapshotResp)(nil),  // 4: pb.UpdateMixinsnapshotResp
	(*DelMixinsnapshotReq)(nil),      // 5: pb.DelMixinsnapshotReq
	(*DelMixinsnapshotResp)(nil),     // 6: pb.DelMixinsnapshotResp
	(*GetMixinsnapshotByIdReq)(nil),  // 7: pb.GetMixinsnapshotByIdReq
	(*GetMixinsnapshotByIdResp)(nil), // 8: pb.GetMixinsnapshotByIdResp
	(*SearchMixinsnapshotReq)(nil),   // 9: pb.SearchMixinsnapshotReq
	(*SearchMixinsnapshotResp)(nil),  // 10: pb.SearchMixinsnapshotResp
}
var file_mixinsnapshotsrv_proto_depIdxs = []int32{
	0,  // 0: pb.GetMixinsnapshotByIdResp.mixinsnapshot:type_name -> pb.Mixinsnapshot
	0,  // 1: pb.SearchMixinsnapshotResp.mixinsnapshot:type_name -> pb.Mixinsnapshot
	1,  // 2: pb.mixinsnapshotsrv.AddMixinsnapshot:input_type -> pb.AddMixinsnapshotReq
	3,  // 3: pb.mixinsnapshotsrv.UpdateMixinsnapshot:input_type -> pb.UpdateMixinsnapshotReq
	5,  // 4: pb.mixinsnapshotsrv.DelMixinsnapshot:input_type -> pb.DelMixinsnapshotReq
	7,  // 5: pb.mixinsnapshotsrv.GetMixinsnapshotById:input_type -> pb.GetMixinsnapshotByIdReq
	9,  // 6: pb.mixinsnapshotsrv.SearchMixinsnapshot:input_type -> pb.SearchMixinsnapshotReq
	2,  // 7: pb.mixinsnapshotsrv.AddMixinsnapshot:output_type -> pb.AddMixinsnapshotResp
	4,  // 8: pb.mixinsnapshotsrv.UpdateMixinsnapshot:output_type -> pb.UpdateMixinsnapshotResp
	6,  // 9: pb.mixinsnapshotsrv.DelMixinsnapshot:output_type -> pb.DelMixinsnapshotResp
	8,  // 10: pb.mixinsnapshotsrv.GetMixinsnapshotById:output_type -> pb.GetMixinsnapshotByIdResp
	10, // 11: pb.mixinsnapshotsrv.SearchMixinsnapshot:output_type -> pb.SearchMixinsnapshotResp
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_mixinsnapshotsrv_proto_init() }
func file_mixinsnapshotsrv_proto_init() {
	if File_mixinsnapshotsrv_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mixinsnapshotsrv_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Mixinsnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMixinsnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddMixinsnapshotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMixinsnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMixinsnapshotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMixinsnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DelMixinsnapshotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMixinsnapshotByIdReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMixinsnapshotByIdResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMixinsnapshotReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mixinsnapshotsrv_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMixinsnapshotResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mixinsnapshotsrv_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mixinsnapshotsrv_proto_goTypes,
		DependencyIndexes: file_mixinsnapshotsrv_proto_depIdxs,
		MessageInfos:      file_mixinsnapshotsrv_proto_msgTypes,
	}.Build()
	File_mixinsnapshotsrv_proto = out.File
	file_mixinsnapshotsrv_proto_rawDesc = nil
	file_mixinsnapshotsrv_proto_goTypes = nil
	file_mixinsnapshotsrv_proto_depIdxs = nil
}
