// Code generated by goctl. DO NOT EDIT.
// Source: usersrv.proto

package server

import (
	"context"

	"github.com/lixvyang/betxin-micro/service/user/rpc/internal/logic"
	"github.com/lixvyang/betxin-micro/service/user/rpc/internal/svc"
	"github.com/lixvyang/betxin-micro/service/user/rpc/types/pb"
)

type UsersrvServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedUsersrvServer
}

func NewUsersrvServer(svcCtx *svc.ServiceContext) *UsersrvServer {
	return &UsersrvServer{
		svcCtx: svcCtx,
	}
}

// -----------------------user-----------------------
func (s *UsersrvServer) AddUser(ctx context.Context, in *pb.AddUserReq) (*pb.AddUserResp, error) {
	l := logic.NewAddUserLogic(ctx, s.svcCtx)
	return l.AddUser(in)
}

func (s *UsersrvServer) UpdateUser(ctx context.Context, in *pb.UpdateUserReq) (*pb.UpdateUserResp, error) {
	l := logic.NewUpdateUserLogic(ctx, s.svcCtx)
	return l.UpdateUser(in)
}

func (s *UsersrvServer) DelUser(ctx context.Context, in *pb.DelUserReq) (*pb.DelUserResp, error) {
	l := logic.NewDelUserLogic(ctx, s.svcCtx)
	return l.DelUser(in)
}

func (s *UsersrvServer) GetUserById(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByIdLogic(ctx, s.svcCtx)
	return l.GetUserById(in)
}

func (s *UsersrvServer) GetUserByUid(ctx context.Context, in *pb.GetUserByIdReq) (*pb.GetUserByIdResp, error) {
	l := logic.NewGetUserByUidLogic(ctx, s.svcCtx)
	return l.GetUserByUid(in)
}

func (s *UsersrvServer) SearchUser(ctx context.Context, in *pb.SearchUserReq) (*pb.SearchUserResp, error) {
	l := logic.NewSearchUserLogic(ctx, s.svcCtx)
	return l.SearchUser(in)
}
