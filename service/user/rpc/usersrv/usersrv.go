// Code generated by goctl. DO NOT EDIT.
// Source: usersrv.proto

package usersrv

import (
	"context"

	"github.com/lixvyang/betxin-micro/service/user/rpc/types/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddUserReq       = pb.AddUserReq
	AddUserResp      = pb.AddUserResp
	DelUserReq       = pb.DelUserReq
	DelUserResp      = pb.DelUserResp
	GetUserByIdReq   = pb.GetUserByIdReq
	GetUserByIdResp  = pb.GetUserByIdResp
	GetUserByUidReq  = pb.GetUserByUidReq
	GetUserByUidResp = pb.GetUserByUidResp
	SearchUserReq    = pb.SearchUserReq
	SearchUserResp   = pb.SearchUserResp
	UpdateUserReq    = pb.UpdateUserReq
	UpdateUserResp   = pb.UpdateUserResp
	User             = pb.User

	Usersrv interface {
		// -----------------------user-----------------------
		AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error)
		DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error)
		GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		GetUserByUid(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error)
		SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error)
	}

	defaultUsersrv struct {
		cli zrpc.Client
	}
)

func NewUsersrv(cli zrpc.Client) Usersrv {
	return &defaultUsersrv{
		cli: cli,
	}
}

// -----------------------user-----------------------
func (m *defaultUsersrv) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := pb.NewUsersrvClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultUsersrv) UpdateUser(ctx context.Context, in *UpdateUserReq, opts ...grpc.CallOption) (*UpdateUserResp, error) {
	client := pb.NewUsersrvClient(m.cli.Conn())
	return client.UpdateUser(ctx, in, opts...)
}

func (m *defaultUsersrv) DelUser(ctx context.Context, in *DelUserReq, opts ...grpc.CallOption) (*DelUserResp, error) {
	client := pb.NewUsersrvClient(m.cli.Conn())
	return client.DelUser(ctx, in, opts...)
}

func (m *defaultUsersrv) GetUserById(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := pb.NewUsersrvClient(m.cli.Conn())
	return client.GetUserById(ctx, in, opts...)
}

func (m *defaultUsersrv) GetUserByUid(ctx context.Context, in *GetUserByIdReq, opts ...grpc.CallOption) (*GetUserByIdResp, error) {
	client := pb.NewUsersrvClient(m.cli.Conn())
	return client.GetUserByUid(ctx, in, opts...)
}

func (m *defaultUsersrv) SearchUser(ctx context.Context, in *SearchUserReq, opts ...grpc.CallOption) (*SearchUserResp, error) {
	client := pb.NewUsersrvClient(m.cli.Conn())
	return client.SearchUser(ctx, in, opts...)
}
